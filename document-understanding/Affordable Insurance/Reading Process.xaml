<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p9="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_InsuranceDocument" Type="InArgument(ui:QueueItem)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1706,5200.666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.DU.Shared.Utils</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataValidation</x:String>
      <x:String>UiPath.IntelligentOCR.Actions.Abstractions</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Actions</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF.ExtractPDFPageRange</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.Persistence</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Sequence For Insurance Document Data Extraction " sap:VirtualizedContainerService.HintSize="711.3333333333334,5136" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="649.3333333333334,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;Data Extraction my ML model has been started&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="649.3333333333334,4673.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="610.6666666666666,4402" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="C:\Users\sunde\OneDrive\文件\UiPath\DocumentUnderstandingProcess\Input Data\0300648 2024-04-14 87 98.pdf" Name="DocumentPath" />
            <Variable x:TypeArguments="p9:DocumentTaxonomy" Name="Taxonomy" />
            <Variable x:TypeArguments="x:String" Name="DocText" />
            <Variable x:TypeArguments="p3:Document" Name="DOM" />
            <Variable x:TypeArguments="p8:ClassificationResult[]" Name="ClassificationResults" />
            <Variable x:TypeArguments="p8:ExtractionResult" Name="ExtractionResults" />
            <Variable x:TypeArguments="p8:ClassificationResult[]" Name="Val_claasificationResult" />
            <Variable x:TypeArguments="upr:ILocalResource" Name="ExportedPdf" />
            <Variable x:TypeArguments="p8:ExtractionResult" Name="ValidatedExtractionResults" />
            <Variable x:TypeArguments="p:DocumentValidationActionData" Name="ActionObject" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="548.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Loading the Taxonomy&quot;]" />
          <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="548.6666666666666,140" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[Taxonomy]" />
          <Assign DisplayName="Assign the document path" sap:VirtualizedContainerService.HintSize="548.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[DocumentPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[DocumentPath]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="548.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[&quot;Digitizing the document&quot;]" />
          <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Insurance Document" DocumentObjectModel="[DOM]" DocumentPath="[DocumentPath]" DocumentText="[DocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="548.6666666666666,339.3333333333333" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
            <p:DigitizeDocument.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))" Argument1="{x:Reference __ReferenceID0}" Argument2="{x:Reference __ReferenceID1}">
                <p1:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="LjeXW209j9JjPmIU1goOnLqkERqEOFIyd/AvUpoWTPLp6Islk/f+J8Py1GPInfhsuFzlUMYv1v4K66zZZmwpVg==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25.333333333333332" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Language="auto" NoopExecution="False" Profile="None" Scale="1" Timeout="100000">
                  <p1:UiPathDocumentOCR.Image>
                    <InArgument x:TypeArguments="sd:Image">
                      <DelegateArgumentValue x:TypeArguments="sd:Image" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_1">
                        <DelegateInArgument x:TypeArguments="sd:Image" x:Name="__ReferenceID0" Name="Image" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:UiPathDocumentOCR.Image>
                  <p1:UiPathDocumentOCR.PredictionId>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_2">
                        <DelegateInArgument x:TypeArguments="x:String" x:Name="__ReferenceID1" Name="PredictionId" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:UiPathDocumentOCR.PredictionId>
                </p1:UiPathDocumentOCR>
              </ActivityFunc>
            </p:DigitizeDocument.OCREngine>
          </p:DigitizeDocument>
          <p2:ClassifyDocumentScope ClassificationResults="[ClassificationResults]" DisplayName="Classify Insurance Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[DocumentPath]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="548.6666666666666,606" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI171e9e9bf6c8425db8cf5833fd9188fb&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;MarbleBox.InsuranceDocuments.HO3&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}},&quot;UI097d4b8895294704aa85359a1dca5d94&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;MarbleBox.InsuranceDocuments.HO3&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:false}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI171e9e9bf6c8425db8cf5833fd9188fb&quot;:&quot;0&quot;,&quot;UI097d4b8895294704aa85359a1dca5d94&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI097d4b8895294704aa85359a1dca5d94&quot;:[],&quot;UI171e9e9bf6c8425db8cf5833fd9188fb&quot;:[]}}">
            <p2:ClassifyDocumentScope.Classifiers>
              <p2:IntelligentKeywordClassifier LearningData="{x:Null}" TimeoutMs="{x:Null}" ApiKey="LjeXW209j9JjPmIU1goOnLqkERqEOFIyd/AvUpoWTPLp6Islk/f+J8Py1GPInfhsuFzlUMYv1v4K66zZZmwpVg==" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="222.66666666666666,240" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="IntellegentClassifier.json" PerformDocumentSplitting="True" PersistenceId="UI171e9e9bf6c8425db8cf5833fd9188fb" SendDocumentsForAlgorithmImprovements="True" UsePageNumbers="True">
                <p2:IntelligentKeywordClassifier.ClassifierResult>
                  <OutArgument x:TypeArguments="p4:ClassifierResult">
                    <DelegateArgumentReference x:TypeArguments="p4:ClassifierResult">
                      <DelegateOutArgument x:TypeArguments="p4:ClassifierResult" Name="ClassifierResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p2:IntelligentKeywordClassifier.ClassifierResult>
                <p2:IntelligentKeywordClassifier.DocumentObjectModel>
                  <InArgument x:TypeArguments="p3:Document">
                    <DelegateArgumentValue x:TypeArguments="p3:Document">
                      <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:IntelligentKeywordClassifier.DocumentObjectModel>
                <p2:IntelligentKeywordClassifier.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:IntelligentKeywordClassifier.DocumentPath>
                <p2:IntelligentKeywordClassifier.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:IntelligentKeywordClassifier.DocumentText>
                <p2:IntelligentKeywordClassifier.DocumentTypes>
                  <InArgument x:TypeArguments="p4:ClassifierDocumentType[]">
                    <DelegateArgumentValue x:TypeArguments="p4:ClassifierDocumentType[]">
                      <DelegateInArgument x:TypeArguments="p4:ClassifierDocumentType[]" Name="DocumentTypes" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:IntelligentKeywordClassifier.DocumentTypes>
                <p2:IntelligentKeywordClassifier.PredictionId>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:IntelligentKeywordClassifier.PredictionId>
              </p2:IntelligentKeywordClassifier>
              <p2:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="222.66666666666666,240" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="Classifier.json" PersistenceId="UI097d4b8895294704aa85359a1dca5d94">
                <p2:KeywordBasedClassifier.ClassifierResult>
                  <OutArgument x:TypeArguments="p4:ClassifierResult">
                    <DelegateArgumentReference x:TypeArguments="p4:ClassifierResult">
                      <DelegateOutArgument x:TypeArguments="p4:ClassifierResult" Name="ClassifierResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p2:KeywordBasedClassifier.ClassifierResult>
                <p2:KeywordBasedClassifier.DocumentObjectModel>
                  <InArgument x:TypeArguments="p3:Document">
                    <DelegateArgumentValue x:TypeArguments="p3:Document">
                      <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:KeywordBasedClassifier.DocumentObjectModel>
                <p2:KeywordBasedClassifier.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:KeywordBasedClassifier.DocumentPath>
                <p2:KeywordBasedClassifier.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:KeywordBasedClassifier.DocumentText>
                <p2:KeywordBasedClassifier.DocumentTypes>
                  <InArgument x:TypeArguments="p4:ClassifierDocumentType[]">
                    <DelegateArgumentValue x:TypeArguments="p4:ClassifierDocumentType[]">
                      <DelegateInArgument x:TypeArguments="p4:ClassifierDocumentType[]" Name="DocumentTypes" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:KeywordBasedClassifier.DocumentTypes>
                <p2:KeywordBasedClassifier.PredictionId>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p2:KeywordBasedClassifier.PredictionId>
              </p2:KeywordBasedClassifier>
            </p2:ClassifyDocumentScope.Classifiers>
          </p2:ClassifyDocumentScope>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="548.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[ClassificationResults.First.ToString]" />
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="548.6666666666666,244.66666666666666" sap2010:WorkflowViewState.IdRef="CommentOut_2">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,132.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <p2:PresentClassificationStation AutomaticClassificationResults="[ClassificationResults]" DisplayName="Present Classification Station" DocumentObjectModel="[DOM]" DocumentPath="[DocumentPath]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="PresentClassificationStation_1" Taxonomy="[Taxonomy]" ValidatedClassificationResults="[Val_claasificationResult]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </p2:PresentClassificationStation>
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="548.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[&quot;Extracting the data using ML model&quot;]" />
          <p5:DataExtractionScope DocumentTypeId="{x:Null}" ApplyGenerativeValidation="False" ClassificationResult="[ClassificationResults.FirstOrDefault()]" DisplayName="Data Insurance Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[DocumentPath]" DocumentText="[DocText]" ExtractionResult="[ExtractionResults]" FormatValuesIfPossible="True" GenerativeValidationConfidenceThreshold="65" sap:VirtualizedContainerService.HintSize="548.6666666666666,589.3333333333334" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIc463da6f2c9848899ca9ed8f8816f234&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;MarbleBox.InsuranceDocuments.HO3&quot;:{&quot;FieldMappings&quot;:{&quot;MarbleBox.InsuranceDocuments.HO3.CarrierName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.CarrierName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;carrier-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.CarrierAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.CarrierAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;carrier-address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.Carrierphone&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.Carrierphone&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;carrier-phone\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.PolicyNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.PolicyNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;policy-number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.PolicyStartdate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.PolicyStartdate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;policy-start-date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.PolicyEnddate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.PolicyEnddate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;policy-end-date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.Addressinsured&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.Addressinsured&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;address-insured\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.PhoneInsured&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.PhoneInsured&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;phone-insured\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.AgencyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.AgencyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;agency-name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.Agencyaddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.Agencyaddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;agency-address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.PolicyDeductibles&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.PolicyDeductibles&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;policy-deductible\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.Disasterdeductibles&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.Disasterdeductibles&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;disaster-deductibles\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.AnnualPremium&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.AnnualPremium&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total-annual-premium\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.PolicytransanctionCode&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.PolicytransanctionCode&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;policy-transaction-code\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.YearBuilt&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.YearBuilt&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;year-built\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;MarbleBox.InsuranceDocuments.HO3.InsuredName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;MarbleBox.InsuranceDocuments.HO3.InsuredName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name-insured\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIc463da6f2c9848899ca9ed8f8816f234&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIc463da6f2c9848899ca9ed8f8816f234&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;carrier-name&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;carrier-address&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;carrier-phone&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;policy-number&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;policy-start-date&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;policy-end-date&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;address-insured&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;phone-insured&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;agency-name&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;agency-address&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;agency-phone&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;policy-deductible&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;disaster-deductibles&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;total-annual-premium&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;policy-transaction-code&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;year-built&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null},{&quot;FieldId&quot;:&quot;name-insured&quot;,&quot;SubOptions&quot;:null,&quot;Metadata&quot;:null}],&quot;Metadata&quot;:[{&quot;Key&quot;:&quot;schema&quot;,&quot;Value&quot;:&quot;{\&quot;model\&quot;: \&quot;du\&quot;, \&quot;api_version\&quot;: \&quot;1.2\&quot;, \&quot;tags\&quot;: [{\&quot;name\&quot;: \&quot;carrier-name\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;carrier-address\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;carrier-phone\&quot;, \&quot;type\&quot;: \&quot;phone\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;policy-number\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;policy-start-date\&quot;, \&quot;type\&quot;: \&quot;date\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;policy-end-date\&quot;, \&quot;type\&quot;: \&quot;date\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;address-insured\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;phone-insured\&quot;, \&quot;type\&quot;: \&quot;phone\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;agency-name\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;agency-address\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;agency-phone\&quot;, \&quot;type\&quot;: \&quot;phone\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;policy-deductible\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;disaster-deductibles\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;total-annual-premium\&quot;, \&quot;type\&quot;: \&quot;number\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;policy-transaction-code\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;year-built\&quot;, \&quot;type\&quot;: \&quot;number\&quot;, \&quot;multi_valued\&quot;: false}, {\&quot;name\&quot;: \&quot;name-insured\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_valued\&quot;: false}], \&quot;schema\&quot;: {\&quot;extraction\&quot;: [{\&quot;name\&quot;: \&quot;carrier-name\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#0066ff\&quot;, \&quot;hotkey\&quot;: \&quot;c\&quot;, \&quot;display_name\&quot;: \&quot;Carrier name\&quot;}, {\&quot;name\&quot;: \&quot;carrier-address\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: true, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#2d8020\&quot;, \&quot;hotkey\&quot;: \&quot;a\&quot;, \&quot;display_name\&quot;: \&quot;Carrier Address\&quot;}, {\&quot;name\&quot;: \&quot;carrier-phone\&quot;, \&quot;type\&quot;: \&quot;phone\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#40ff8c\&quot;, \&quot;hotkey\&quot;: \&quot;r\&quot;, \&quot;display_name\&quot;: \&quot;Carrier Phone\&quot;}, {\&quot;name\&quot;: \&quot;policy-number\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#ff0022\&quot;, \&quot;hotkey\&quot;: \&quot;p\&quot;, \&quot;display_name\&quot;: \&quot;Policy Number\&quot;}, {\&quot;name\&quot;: \&quot;policy-start-date\&quot;, \&quot;type\&quot;: \&quot;date\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#4400ff\&quot;, \&quot;hotkey\&quot;: \&quot;o\&quot;, \&quot;display_name\&quot;: \&quot;Policy Start Date\&quot;}, {\&quot;name\&quot;: \&quot;policy-end-date\&quot;, \&quot;type\&quot;: \&quot;date\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#0099bf\&quot;, \&quot;hotkey\&quot;: \&quot;l\&quot;, \&quot;display_name\&quot;: \&quot;Policy end date\&quot;}, {\&quot;name\&quot;: \&quot;address-insured\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: true, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#ff0088\&quot;, \&quot;hotkey\&quot;: \&quot;d\&quot;, \&quot;display_name\&quot;: \&quot;Address Insured\&quot;}, {\&quot;name\&quot;: \&quot;phone-insured\&quot;, \&quot;type\&quot;: \&quot;phone\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#7f2039\&quot;, \&quot;hotkey\&quot;: \&quot;h\&quot;, \&quot;display_name\&quot;: \&quot;Phone Insured\&quot;}, {\&quot;name\&quot;: \&quot;agency-name\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#403030\&quot;, \&quot;hotkey\&quot;: \&quot;g\&quot;, \&quot;display_name\&quot;: \&quot;Agency Name\&quot;}, {\&quot;name\&quot;: \&quot;agency-address\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: true, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#fce41c\&quot;, \&quot;hotkey\&quot;: \&quot;e\&quot;, \&quot;display_name\&quot;: \&quot;Agency Address\&quot;}, {\&quot;name\&quot;: \&quot;agency-phone\&quot;, \&quot;type\&quot;: \&quot;phone\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#c827f5\&quot;, \&quot;hotkey\&quot;: \&quot;y\&quot;, \&quot;display_name\&quot;: \&quot;Agency Phone\&quot;}, {\&quot;name\&quot;: \&quot;policy-deductible\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#b6c570\&quot;, \&quot;hotkey\&quot;: \&quot;i\&quot;, \&quot;display_name\&quot;: \&quot;Policy Deductible\&quot;}, {\&quot;name\&quot;: \&quot;disaster-deductibles\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#c094c9\&quot;, \&quot;hotkey\&quot;: \&quot;s\&quot;, \&quot;display_name\&quot;: \&quot;Disaster Deductibles\&quot;}, {\&quot;name\&quot;: \&quot;total-annual-premium\&quot;, \&quot;type\&quot;: \&quot;number\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#5740d5\&quot;, \&quot;hotkey\&quot;: \&quot;t\&quot;, \&quot;display_name\&quot;: \&quot;Total Annual Premium\&quot;}, {\&quot;name\&quot;: \&quot;policy-transaction-code\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#46dbfc\&quot;, \&quot;hotkey\&quot;: \&quot;-\&quot;, \&quot;display_name\&quot;: \&quot;Policy Transaction Code\&quot;}, {\&quot;name\&quot;: \&quot;year-built\&quot;, \&quot;type\&quot;: \&quot;number\&quot;, \&quot;multi_line\&quot;: false, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;color\&quot;: \&quot;#52cd55\&quot;, \&quot;hotkey\&quot;: \&quot;b\&quot;, \&quot;display_name\&quot;: \&quot;Year Built\&quot;}, {\&quot;name\&quot;: \&quot;name-insured\&quot;, \&quot;type\&quot;: \&quot;string\&quot;, \&quot;multi_line\&quot;: true, \&quot;post_processing\&quot;: \&quot;first_span\&quot;, \&quot;scoring\&quot;: \&quot;levenshtein\&quot;, \&quot;color\&quot;: \&quot;#ed4af5\&quot;, \&quot;hotkey\&quot;: \&quot;n\&quot;, \&quot;display_name\&quot;: \&quot;Name Insured\&quot;}], \&quot;classification\&quot;: {}}, \&quot;release\&quot;: \&quot;ga\&quot;}&quot;}]}]}}">
            <p5:DataExtractionScope.Extractors>
              <p6:MachineLearningExtractor Endpoint="{x:Null}" ApiKey="LjeXW209j9JjPmIU1goOnLqkERqEOFIyd/AvUpoWTPLp6Islk/f+J8Py1GPInfhsuFzlUMYv1v4K66zZZmwpVg==" Configuration="{}{&quot;Endpoint&quot;:&quot;&quot;,&quot;ApiKey&quot;:&quot;LjeXW209j9JjPmIU1goOnLqkERqEOFIyd/AvUpoWTPLp6Islk/f+J8Py1GPInfhsuFzlUMYv1v4K66zZZmwpVg==&quot;,&quot;SelectedMLSkill&quot;:&quot;DemoDocumentUnderstanding&quot;,&quot;AvailableMLSkills&quot;:[&quot;DemoDocumentUnderstanding&quot;]}" DisplayName="Machine Learning Extractor" sap:VirtualizedContainerService.HintSize="222.66666666666666,223.33333333333334" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_1" PersistenceId="UIc463da6f2c9848899ca9ed8f8816f234" RetryOnFailure="True" SelectedMLSkill="HCPCCarrierExtractor" Timeout="100000" UseServerSideOCR="False">
                <p6:MachineLearningExtractor.AvailableMLSkills>
                  <scg:List x:TypeArguments="x:String" Capacity="1">
                    <x:String>HCPCCarrierExtractor</x:String>
                  </scg:List>
                </p6:MachineLearningExtractor.AvailableMLSkills>
                <p6:MachineLearningExtractor.DocumentBounds>
                  <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                    <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                      <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p6:MachineLearningExtractor.DocumentBounds>
                <p6:MachineLearningExtractor.DocumentObjectModel>
                  <InArgument x:TypeArguments="p3:Document">
                    <DelegateArgumentValue x:TypeArguments="p3:Document">
                      <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p6:MachineLearningExtractor.DocumentObjectModel>
                <p6:MachineLearningExtractor.DocumentPath>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p6:MachineLearningExtractor.DocumentPath>
                <p6:MachineLearningExtractor.DocumentText>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p6:MachineLearningExtractor.DocumentText>
                <p6:MachineLearningExtractor.ExtractorDocumentType>
                  <InArgument x:TypeArguments="p7:ExtractorDocumentType">
                    <DelegateArgumentValue x:TypeArguments="p7:ExtractorDocumentType">
                      <DelegateInArgument x:TypeArguments="p7:ExtractorDocumentType" Name="ExtractorDocumentType" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p6:MachineLearningExtractor.ExtractorDocumentType>
                <p6:MachineLearningExtractor.ExtractorResult>
                  <OutArgument x:TypeArguments="p7:ExtractorResult">
                    <DelegateArgumentReference x:TypeArguments="p7:ExtractorResult">
                      <DelegateOutArgument x:TypeArguments="p7:ExtractorResult" Name="ExtractorResult" />
                    </DelegateArgumentReference>
                  </OutArgument>
                </p6:MachineLearningExtractor.ExtractorResult>
                <p6:MachineLearningExtractor.PredictionId>
                  <InArgument x:TypeArguments="x:String">
                    <DelegateArgumentValue x:TypeArguments="x:String">
                      <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                    </DelegateArgumentValue>
                  </InArgument>
                </p6:MachineLearningExtractor.PredictionId>
              </p6:MachineLearningExtractor>
            </p5:DataExtractionScope.Extractors>
          </p5:DataExtractionScope>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="548.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_8" Message="[&quot;validating and saving the data&quot;]" />
          <Sequence DisplayName="Attended SetUp" sap:VirtualizedContainerService.HintSize="548.6666666666666,1162" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd2:DataSet" Name="OutputDataset" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:PresentValidationStation FieldsValidationConfidence="{x:Null}" AutomaticExtractionResults="[ExtractionResults]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="[DocumentPath]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="450,414" sap2010:WorkflowViewState.IdRef="PresentValidationStation_2" ShowOnlyRelevantPageRange="False" Taxonomy="[Taxonomy]" ValidatedExtractionResults="[ValidatedExtractionResults]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:PresentValidationStation>
            <p5:ExportExtractionResults DataSet="[OutputDataset]" DisplayName="Export Extraction Results" ExtractionResult="[ValidatedExtractionResults]" sap:VirtualizedContainerService.HintSize="450,214" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_2" IncludeConfidence="False" IncludeOCRConfidence="False" />
            <ui:ForEach x:TypeArguments="sd2:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="450,414" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[OutputDataset.Tables]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sd2:DataTable">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd2:DataTable" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,223.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[currentItem]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="354,138.66666666666666" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="OutputData\OutputData From ML model.xlsx" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="548.6666666666666,235.33333333333334" sap2010:WorkflowViewState.IdRef="CommentOut_4">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,132.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="If unattended Setup is required" sap:VirtualizedContainerService.HintSize="450,48" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:CreateDocumentValidationAction FieldsValidationConfidence="{x:Null}" FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionCatalog="MarbleBoxDemoCatalog" ActionOutput="[ActionObject]" ActionPriority="Medium" ActionTitle="MarbleBox Demo Catalog" AutomaticExtractionResults="[ExtractionResults]" BucketFolderPath="MarbleBox/MarbleBoxDemoBucket" BucketName="MarbleBoxDemoBucket" DisplayName="Create Document Validation Action" DocumentObjectModel="[DOM]" DocumentPath="[DocumentPath]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="478,414" sap2010:WorkflowViewState.IdRef="CreateDocumentValidationAction_2" RetryOnFailure="True" ShowOnlyRelevantPageRange="False" Taxonomy="[Taxonomy]" />
                  <p:WaitForDocumentValidationActionAndResume ActionOutput="{x:Null}" AutomaticExtractionResults="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" DownloadFolderPath="{x:Null}" StatusMessage="{x:Null}" Taxonomy="{x:Null}" TimeoutMs="{x:Null}" ValidatedExtractionResults="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[ActionObject]" DisplayName="Wait For Document Validation Action And Resume" sap:VirtualizedContainerService.HintSize="478,396" sap2010:WorkflowViewState.IdRef="WaitForDocumentValidationActionAndResume_1" RemoveDataFromStorage="False" RetryOnFailure="True" />
                </Sequence>
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="615.3333333333334,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;Model Failed to read the document. &quot;+exception.Message+&quot;. &quot;+exception.Source]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="649.3333333333334,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;The necessary Data reading by AI model Is successful. Uploading the data into a performer queue&quot;]" />
  </Sequence>
</Activity>